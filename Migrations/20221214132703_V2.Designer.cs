// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace Prvenstvo.Migrations
{
    [DbContext(typeof(UtakmicaContext))]
    [Migration("20221214132703_V2")]
    partial class V2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Stadion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Kapacitet")
                        .HasColumnType("int");

                    b.Property<string>("Lokacija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Otvaranje")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Stadioni");
                });

            modelBuilder.Entity("Models.Tim", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Faza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rezultat")
                        .HasColumnType("int");

                    b.Property<int?>("StadionID")
                        .HasColumnType("int");

                    b.Property<DateTime>("VremeIgranja")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("StadionID");

                    b.ToTable("Timovi");
                });

            modelBuilder.Entity("Models.Utakmica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BrojPosetioca")
                        .HasColumnType("int");

                    b.Property<int>("Posecenost")
                        .HasColumnType("int");

                    b.Property<int?>("StadionID")
                        .HasColumnType("int");

                    b.Property<int?>("TimID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StadionID");

                    b.HasIndex("TimID");

                    b.ToTable("Utakmice");
                });

            modelBuilder.Entity("Models.Tim", b =>
                {
                    b.HasOne("Models.Stadion", "Stadion")
                        .WithMany()
                        .HasForeignKey("StadionID");

                    b.Navigation("Stadion");
                });

            modelBuilder.Entity("Models.Utakmica", b =>
                {
                    b.HasOne("Models.Stadion", "Stadion")
                        .WithMany("OdigraneUtakmice")
                        .HasForeignKey("StadionID");

                    b.HasOne("Models.Tim", "Tim")
                        .WithMany()
                        .HasForeignKey("TimID");

                    b.Navigation("Stadion");

                    b.Navigation("Tim");
                });

            modelBuilder.Entity("Models.Stadion", b =>
                {
                    b.Navigation("OdigraneUtakmice");
                });
#pragma warning restore 612, 618
        }
    }
}
